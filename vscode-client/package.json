{
  "name": "cquery",
  "description": "Low-latency language server for C++. Highly scalable and designed for huge code bases.",
  "author": "Jacob Dufault",
  "license": "MIT",
  "version": "0.0.1",
  "publisher": "jacobdufault",
  "preview": true,
  "engines": {
    "vscode": "^1.8.0"
  },
  "categories": [
    "Languages"
  ],
  "activationEvents": [
    "onLanguage:cpp",
    "workspaceContains:compile_commands.json",
    "workspaceContains:clang_args"
  ],
  "main": "./out/src/extension",
  "contributes": {
    "commands": {
      "title": "Freshen index",
      "category": "cquery",
      "command": "cquery.freshenIndex"
    },

    "configuration": {
      "type": "object",
      "title": "cquery",
      "properties": {
        "cquery.cacheDirectory": {
          "type": "string",
          "default": "",
          "description": "Absolute path to the directory that the cached index will be stored in. Try to have this directory on an SSD. If not explicitly set, this will be automatically populated with the extension cache directory.\n\nCache directories are project-wide, so this should be configured in the workspace settings so multiple indexes do not clash.\n\nExample value: \"/work/cquery-cache/chrome/\""
        },
        "cquery.whitelist": {
          "type": "array",
          "default": [],
          "description": "Every EMCAScript regex in this list must match the translation unit's absolute path for it to get indexed. An empty list is interpreted as matching everything.\n\nYou probably want to begin the regex using `.*` because the passed paths are absolute."
        },
        "cquery.blacklist": {
          "type": "array",
          "default": [],
          "description": "A translation unit (cc/cpp file) is not indexed if any of the EMCAScript regexes in this list matches translation unit's the absolute path.\n\nYou probably want to begin the regex using `.*` because the passed paths are absolute."
        },
        "cquery.indexerCount": {
          "type": "number",
          "default": 7,
          "description": "The number of indexing/worker jobs that run concurrently. This should be set to the number of CPU cores you have -1. cquery scales quite well, so this can go to a very high value.\n\nFor example, if you have a 4 core hyper-threaded processor, this should be set to 7. If you have dual 13 core hyper-threaded processors, this should be set to 2*13*2-1=51."
        },
        "cquery.maxWorkspaceSearchResults": {
          "type": "number",
          "default": 1000,
          "description": "The maximum number of global search (ie, Ctrl+P + #foo) search results to report. For small search strings on large projects there can be a massive number of results (ie, over 1,000,000) so this limit is important to avoid extremely long delays."
        },
        "cquery.extraClangArguments": {
          "type": "array",
          "default": [],
          "description": "An extra set of command line arguments to give clang when indexing. Each list entry is a separate argument."
        },
        "cquery.enableIndexing": {
          "type": "boolean",
          "default": true,
          "description": "If set to false, updating the index will be disabled."
        },
        "cquery.enableCacheWrite": {
          "type": "boolean",
          "default": true,
          "description": "If set to false, writing indexed files out to cache will be disabled. Only useful if |enableIndexing| is true."
        },
        "cquery.enableCacheRead": {
          "type": "boolean",
          "default": true,
          "description": "If set to false, restoring the cached index will be disabled. Only useful if there is a cached index stored on disk."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "tsc -p ./",
    "compile": "tsc -watch -p ./",
    "update-vscode": "node ./node_modules/vscode/bin/install",
    "postinstall": "node ./node_modules/vscode/bin/install"
  },
  "devDependencies": {
    "@types/mocha": "^2.2.33",
    "@types/node": "^6.0.52",
    "typescript": "^2.1.5",
    "vscode": "^1.0.3"
  },
  "dependencies": {
    "vscode-languageclient": "^3.0.3"
  }
}
